<?xml version="1.0"?>
<psalm
    totallyTyped="false"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="https://getpsalm.org/schema/config"
    xsi:schemaLocation="https://getpsalm.org/schema/config ./vendor/vimeo/psalm/config.xsd"
    errorBaseline="psalm-baseline.xml"
>
    <projectFiles>
        <directory name="./src" />
        <ignoreFiles>
            <directory name="./vendor" />
        </ignoreFiles>
    </projectFiles>

    <issueHandlers>
        <InvalidCatch>
            <errorLevel type="info">
                <!-- All of the Zend\Uri exceptions extend InvalidArgumentException and implement this interface, so
                this is technically allowed -->
                <file name="src/Link.php" />
            </errorLevel>
        </InvalidCatch>

        <InvalidArgument>
            <errorLevel type="info">
                <!-- There is a version check here to use the opposite parameter order depending on which version of
                the SharedEventManager is being used -->
                <file name="src/Listener/ResourceParametersListener.php" />
                <!-- ZF2's View\Renderer\JsonRenderer has incorrect docblock for this method -->
                <file name="src/View/RestfulJsonRenderer.php" />
            </errorLevel>
        </InvalidArgument>

        <UndefinedClass>
            <errorLevel type="info">
                <!-- type-o in Zend\Http\Header\AcceptAbstract docblock for match method -->
                <file name="src/Listener/ApiProblemListener.php" />
            </errorLevel>
        </UndefinedClass>

        <TypeCoercion>
            <errorLevel type="info">
                <!-- This one doesn't make any sense to me:
                $this->collection expects 'array<mixed, mixed>|Traversable|Zend\Paginator\Paginator',  parent type 'array<mixed, mixed>|Traversable|Zend\Paginator\Paginator' provided -->
                <file name="src/HalCollection.php" />
                <!-- This comes from a config definition, could inline type it, but maybe hides an error -->
                <file name="src/Module.php" />
                <!-- object most likely gets turned into a HalCollection, but isn't guaranteed in the code -->
                <file name="src/Plugin/HalLinks.php" />
            </errorLevel>
        </TypeCoercion>

        <PossiblyNullArgument>
            <errorLevel type="info">
                <!-- this has a check before it that would return false if apiProblem is null -->
                <file name="src/View/RestfulJsonStrategy.php" />
            </errorLevel>
        </PossiblyNullArgument>
    </issueHandlers>
</psalm>
